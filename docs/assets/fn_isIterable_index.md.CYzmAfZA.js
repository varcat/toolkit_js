import{_ as a,c as t,a3 as s,o as i}from"./chunks/framework.Co0xru0F.js";const b=JSON.parse('{"title":"isIterable(x)","description":"","frontmatter":{},"headers":[],"relativePath":"fn/isIterable/index.md","filePath":"src/functions/isIterable/isIterable.md","lastUpdated":1730947922000}'),r={name:"fn/isIterable/index.md"};function l(n,e,o,d,p,c){return i(),t("div",null,e[0]||(e[0]=[s('<h1 id="isiterable-x" tabindex="-1">isIterable(x) <a class="header-anchor" href="#isiterable-x" aria-label="Permalink to &quot;isIterable(x)&quot;">​</a></h1><p>判断是否可迭代，实现了<code>Symbol.iterator</code>接口</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isIterable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div>',4)]))}const k=a(r,[["render",l]]);export{b as __pageData,k as default};
